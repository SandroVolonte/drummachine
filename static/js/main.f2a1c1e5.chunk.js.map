{"version":3,"sources":["mp3converted/100_vocalize-the-groove.mp3","mp3converted/female-harmony.mp3","mp3converted/80s-Bdrum1.mp3","mp3converted/80s-COWBELL1.mp3","mp3converted/80s-CRASH1.mp3","mp3converted/80s-TOM1.mp3","mp3converted/80s-TOM2.mp3","mp3converted/80s-TOM3.mp3","mp3converted/80s-TOM5.mp3","App.js","serviceWorker.js","index.js"],"names":["module","exports","MUSICDISPLAYLIST","Drummachine","props","state","display","clickMusic","bind","handleKeyPressed","event","this","setState","target","value","document","getElementById","play","characterOfButton","String","fromCharCode","charCode","toUpperCase","addEventListener","removeEventListener","className","id","onClick","src","soundQ","soundW","soundE","soundA","soundS","soundD","soundZ","soundX","soundC","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f2a1c1e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/100_vocalize-the-groove.22dcc3d9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/female-harmony.306dea76.mp3\";","module.exports = __webpack_public_path__ + \"static/media/80s-Bdrum1.949a2170.mp3\";","module.exports = __webpack_public_path__ + \"static/media/80s-COWBELL1.f0d44548.mp3\";","module.exports = __webpack_public_path__ + \"static/media/80s-CRASH1.912c8db3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/80s-TOM1.406af532.mp3\";","module.exports = __webpack_public_path__ + \"static/media/80s-TOM2.ccaca4cc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/80s-TOM3.17cc29c8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/80s-TOM5.81e60022.mp3\";","import React from 'react';\r\nimport './App.css';\r\nimport soundQ from \"./mp3converted/100_vocalize-the-groove.mp3\";\r\nimport soundW from \"./mp3converted/female-harmony.mp3\"\r\nimport soundE from \"./mp3converted/80s-Bdrum1.mp3\"\r\nimport soundA from \"./mp3converted/80s-COWBELL1.mp3\"\r\nimport soundS from \"./mp3converted/80s-CRASH1.mp3\"\r\nimport soundD from \"./mp3converted/80s-TOM1.mp3\"\r\nimport soundZ from \"./mp3converted/80s-TOM2.mp3\"\r\nimport soundX from \"./mp3converted/80s-TOM3.mp3\"\r\nimport soundC from \"./mp3converted/80s-TOM5.mp3\"\r\n\r\nconst MUSICDISPLAYLIST = {\r\n  \"Q\" : \"Vocalized Groove\",\r\n  \"W\" : \"Female Harmony\",\r\n  \"E\" : \"80s Bdrum\",\r\n  \"A\" : \"80s Cowbell1\",\r\n  \"S\" : \"80s Crash1\",\r\n  \"D\" : \"80s Tom1\",\r\n  \"Z\" : \"80s Tom2\",\r\n  \"X\" : \"80s Tom3\",\r\n  \"C\" : \"80s Tom5\"\r\n}\r\n\r\n/**\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n**/\r\n\r\n// test comment\r\n\r\nclass Drummachine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      display : \"\"\r\n    }\r\n\r\n    this.clickMusic = this.clickMusic.bind(this);\r\n    this.handleKeyPressed = this.handleKeyPressed.bind(this);\r\n  }\r\n  clickMusic(event){\r\n    this.setState({\r\n      display : MUSICDISPLAYLIST[event.target.value]\r\n    })\r\n    document.getElementById(event.target.value).play();\r\n  }\r\n\r\n  handleKeyPressed(event) {\r\n    let characterOfButton = (String.fromCharCode(event.charCode)).toUpperCase();\r\n    if (characterOfButton in MUSICDISPLAYLIST) {\r\n      this.setState({\r\n        display: MUSICDISPLAYLIST[characterOfButton]\r\n      })\r\n      document.getElementById(characterOfButton).play();\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.addEventListener(\"keypress\", this.handleKeyPressed)\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.removeEventListener(\"keypress\", this.handleKeyPressed)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className={\"main\"} id={\"drum-machine\"}>\r\n          <div className={\"row\"}>\r\n            <div className={\"col-8 console\"}>\r\n              <div className={\"headerwrapper\"}><h3>My drummachine</h3></div>\r\n              <div className={\"row\"}>\r\n                <div className={\"col-8 drumpad\"}>\r\n                  <button className={\"drum-pad r1 c1 btn\"} id={\"QB\"} onClick={this.clickMusic} value={\"Q\"}><audio className={\"clip\"} id={\"Q\"} src={soundQ}/>Q</button>\r\n                  <button className={\"drum-pad r1 c2 btn\"} id={\"WB\"} onClick={this.clickMusic} value={\"W\"}><audio className={\"clip\"} id={\"W\"} src={soundW}/>W</button>\r\n                  <button className={\"drum-pad r1 c3 btn\"} id={\"EB\"} onClick={this.clickMusic} value={\"E\"}><audio className={\"clip\"} id={\"E\"} src={soundE}/>E</button>\r\n                  <button className={\"drum-pad r2 c1 btn\"} id={\"AB\"} onClick={this.clickMusic} value={\"A\"}><audio className={\"clip\"} id={\"A\"} src={soundA}/>A</button>\r\n                  <button className={\"drum-pad r2 c2 btn\"} id={\"SB\"} onClick={this.clickMusic} value={\"S\"}><audio className={\"clip\"} id={\"S\"} src={soundS}/>S</button>\r\n                  <button className={\"drum-pad r2 c3 btn\"} id={\"DB\"} onClick={this.clickMusic} value={\"D\"}><audio className={\"clip\"} id={\"D\"} src={soundD}/>D</button>\r\n                  <button className={\"drum-pad r3 c1 btn\"} id={\"ZB\"} onClick={this.clickMusic} value={\"Z\"}><audio className={\"clip\"} id={\"Z\"} src={soundZ}/>Z</button>\r\n                  <button className={\"drum-pad r3 c2 btn\"} id={\"XB\"} onClick={this.clickMusic} value={\"X\"}><audio className={\"clip\"} id={\"X\"} src={soundX}/>X</button>\r\n                  <button className={\"drum-pad r3 c3 btn\"} id={\"CB\"} onClick={this.clickMusic} value={\"C\"}><audio className={\"clip\"} id={\"C\"} src={soundC}/>C</button>\r\n                </div>\r\n                <div className={\"col-6 display\"} id={\"display\"}>{this.state.display}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default Drummachine;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Drummachine from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Drummachine />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}